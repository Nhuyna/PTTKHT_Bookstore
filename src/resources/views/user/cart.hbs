
<body class="bg-gray-50 min-h-screen flex flex-col">
    
  <div class="flex-grow container mx-auto px-4 py-10">
      <h1 class="text-3xl font-bold text-gray-800 mb-8 text-center sm:text-left">Giỏ hàng của bạn</h1>
      
      <form  id="cartForm" action="/cart/thanhtoan" method="post" id="cartForm">
          <div class="flex flex-col lg:flex-row gap-6 max-w-7xl mx-auto">
            <div class="lg:w-2/3 w-full bg-white rounded-2xl shadow-sm border border-gray-200 overflow-hidden">
              <div class="p-6">
                <h2 class="text-xl font-semibold text-gray-800 mb-4 flex items-center gap-2">
                  <i class="fas fa-shopping-cart text-pink-500"></i>
                  Sản phẩm
                </h2>
                  
                <div class="divide-y divide-gray-100 space-y-5">
                  {{#each cart}}
                  <div class="flex items-center py-5 first:pt-0 group transition-all duration-300 hover:bg-gray-50 rounded-lg p-2"
                    data-book-id="" data-cart-id="">
                    
                    <div class="w-24 h-32 flex-shrink-0 mr-4">
                      <img src="{{this.Anh}}"
                        class="w-full h-full object-cover rounded-lg shadow-sm"
                        alt="">
                    </div>
                    
                    <div class="flex-grow">
                      <h3 class="text-lg font-medium text-gray-800 mb-1 line-clamp-2">
                          {{this.TenSanPham}}
                      </h3>
                        
                      <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
                        <div>
                          <p class="text-pink-600 font-semibold item-price" 
                          data-price="{{this.Gia}}">
                            {{formatNumber this.Gia}} đ
                          </p>
                        </div>
                          
                          <!-- Quantity Controls -->
                        <div class="flex items-center gap-3">
                          <div class="flex items-center border border-gray-300 rounded-lg overflow-hidden">
                            <button type="button" 
                            class="decrease px-3 py-1 bg-gray-50 hover:bg-gray-100 text-gray-600 transition-colors duration-150 focus:outline-none">
                              <i class="fas fa-minus text-xs"></i>
                            </button>
                            
                            <span class="quantity px-3 py-1 w-10 text-center font-medium text-gray-700">
                              {{this.SoLuong}}
                            </span>
                            <input
                              type="hidden"
                              name="soluong[]"
                              class="quantity-input"
                              value="{{this.SoLuong}}"
                            />
                            <input
                              type="hidden"
                              name="idSanPham[]"
                              value="{{this.SanPhamID}}"
                            />
                            <button type="button" class="increase px-3 py-1 bg-gray-50 hover:bg-gray-100 text-gray-600 transition-colors duration-150 focus:outline-none">
                              <i class="fas fa-plus text-xs"></i>
                            </button>

                          </div>
                          
                          <div class="text-pink-600 font-medium text-base whitespace-nowrap item-total"
                            data-price="{{this.Gia}}">
                            0 đ
                          </div>
                          <button type="button" class="delete-btn ml-2 text-gray-400 hover:text-red-500 transition-colors duration-150 focus:outline-none"
                            onclick="xoaSanPham(this)" aria-label="Xóa sản phẩm"
                            title="Xóa sản phẩm"
                            data-book-id="{{this.SanPhamID}}" data-user-id="{{session.user_id}}"
                            >
                            <i class="fas fa-trash"></i>
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  {{/each}}
                </div>
              </div>
            </div>
              
            <div class="lg:w-1/3 w-full bg-white rounded-2xl shadow-sm border border-gray-200 h-fit sticky top-4">
              <div class="p-6">
                <h2 class="text-xl font-semibold text-gray-800 mb-4 flex items-center gap-2">
                  <i class="fas fa-receipt text-pink-500"></i>
                  Thông tin đơn hàng
                </h2>
                
                <div class="space-y-3">
                  <div class="flex justify-between text-gray-600">
                      <span>Tạm tính</span>
                      <span class="total-amount font-medium">
                          <?php echo number_format($row["totalPrice"], 0, ',', '.'); ?>đ
                      </span>
                  </div>
                    
                  <hr class="my-4 border-gray-200" />
                  
                  <div class="flex justify-between font-semibold text-lg">
                      <span>Tổng cộng</span>
                      <input type="hidden" name="tongTien" id="tongTienInput" value="0" />
                      <span class="total-amount text-pink-600">
                          0 đ
                      </span>
                  </div>
                    
                  <p class="text-xs text-gray-500 mt-2">
                      (Đã bao gồm VAT nếu có)
                  </p>
                </div>
                
                <div class="mt-6 space-y-3">
                  <button id="submitCartBtn" type="submit" class="w-full inline-flex items-center justify-center gap-2 px-6 py-3 bg-gradient-to-r from-pink-500 to-rose-500 text-white font-medium rounded-xl shadow-sm hover:shadow-md transform transition-all duration-200 ease-in-out hover:translate-y-[-2px] focus:outline-none focus:ring-2 focus:ring-pink-500 focus:ring-opacity-50">
                      <i class="fas fa-credit-card"></i>
                      Thanh toán ngay
                  </button>
                </div>
                  
                <div class="mt-6 bg-gray-50 rounded-lg p-3 text-sm text-gray-600">
                  <div class="flex items-center gap-2 mb-2">
                      <i class="fas fa-shield-alt text-green-600"></i>
                      <span class="font-medium">Mua sắm an toàn</span>
                  </div>
                  <ul class="list-disc list-inside space-y-1 text-xs pl-1 text-gray-500">
                      <li>Thanh toán bảo mật</li>
                      <li>Giao hàng nhanh chóng</li>
                      <li>Sản phẩm chính hãng 100%</li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
      </form>
  </div>

<script>
  function xoaSanPham(button) {
    const productDiv = button.closest('[data-book-id][data-user-id]');
    const bookId = productDiv.dataset.bookId;
    const user_id = productDiv.dataset.userId;

    if (!confirm("Bạn có chắc chắn muốn xóa sản phẩm này khỏi giỏ hàng?")) return;

    fetch('cart/delete', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: `book_id=${bookId}`
    })
    .then(res => res.json())
    .then(data => {
        if (data.success) {
            productDiv.style.opacity = '0';
            productDiv.style.transform = 'translateX(20px)';
            productDiv.style.transition = 'all 0.3s ease-out';
            
            setTimeout(() => {
                productDiv.remove();
                const remainingItems = document.querySelectorAll('[data-book-id][data-cart-id]');
                if (remainingItems.length === 0) {
                    location.reload();
                }
            }, 300);


        } else {
            alert(data.message || 'Xóa sản phẩm thất bại!');
        }
    })
    .catch(err => {
        console.error("Lỗi xoá:", err);
        alert("Có lỗi xảy ra khi xoá sản phẩm.");
    });
}
</script>
<script>
  function formatCurrency(value) { 
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency', currency: 'VND' 
    }).format(value); } 
  function updateTotal(){ 
    const items = document.querySelectorAll('.quantity');
    let total = 0;
    items.forEach((qtyEl, index) => { 
      const priceEl =
      document.querySelectorAll('.item-price')[index]; const quantityInput =
      document.querySelectorAll('.quantity-input')[index]; const itemTotalEl =
      document.querySelectorAll('.item-total')[index]; const price = parseFloat(priceEl.dataset.price); 
      const qty = parseInt(qtyEl.textContent);
      const itemTotal = price * qty; 
      itemTotalEl.textContent = formatCurrency(itemTotal); 
      quantityInput.value = qty; 
      total += itemTotal; 
    });
    document.getElementById('tongTienInput').value = total;
    document.querySelectorAll('.total-amount').forEach(el => { 
      el.textContent =
      formatCurrency(total); 
    }); 
  }
  document.querySelectorAll('.increase').forEach((btn, index) => {
    btn.addEventListener('click', () => { 
      const qtyEls = document.querySelectorAll('.quantity'); 
      const qtyEl = qtyEls[index]; 
      let qty = parseInt(qtyEl.textContent); 
      qty++; 
      qtyEl.textContent = qty; 
      updateTotal();
    }); 
  }); 
  document.querySelectorAll('.decrease').forEach((btn, index) => {
    btn.addEventListener('click', () => { 
      const qtyEls =
      document.querySelectorAll('.quantity'); 
      const qtyEl = qtyEls[index]; 
      let qty = parseInt(qtyEl.textContent); 
      if (qty >= 1) { 
        qty--; 
        qtyEl.textContent = qty;
        updateTotal(); 
      } 
    }); 
  }); 
  updateTotal();
</script>
<script>
  document.getElementById('cartForm').addEventListener('submit', function (e) {
    const items = document.querySelectorAll('.quantity');
    let totalQuantity = 0;

    items.forEach(qtyEl => {
      totalQuantity += parseInt(qtyEl.textContent);
    });

    if (totalQuantity === 0) {
      e.preventDefault();
      alert("Giỏ hàng đang trống. Vui lòng chọn ít nhất 1 sản phẩm trước khi thanh toán.");
    }
  });
</script>

</body>
</html>